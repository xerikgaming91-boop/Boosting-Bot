
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.3
 * Query Engine version: bb420e667c1820a8c05a38023385f6cc7ef8e83a
 */
Prisma.prismaVersion = {
  client: "6.16.3",
  engine: "bb420e667c1820a8c05a38023385f6cc7ef8e83a"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  discordId: 'discordId',
  username: 'username',
  displayName: 'displayName',
  avatarUrl: 'avatarUrl',
  rolesCsv: 'rolesCsv',
  isRaidlead: 'isRaidlead',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RaidScalarFieldEnum = {
  id: 'id',
  title: 'title',
  difficulty: 'difficulty',
  lootType: 'lootType',
  date: 'date',
  lead: 'lead',
  bosses: 'bosses',
  tanks: 'tanks',
  healers: 'healers',
  dps: 'dps',
  lootbuddies: 'lootbuddies',
  channelId: 'channelId',
  messageId: 'messageId',
  presetId: 'presetId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PresetScalarFieldEnum = {
  id: 'id',
  name: 'name',
  tanks: 'tanks',
  healers: 'healers',
  dps: 'dps',
  lootbuddies: 'lootbuddies'
};

exports.Prisma.BoosterCharScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  name: 'name',
  realm: 'realm',
  class: 'class',
  spec: 'spec',
  rioScore: 'rioScore',
  progress: 'progress',
  itemLevel: 'itemLevel',
  wclUrl: 'wclUrl',
  updatedAt: 'updatedAt'
};

exports.Prisma.SignupScalarFieldEnum = {
  id: 'id',
  raidId: 'raidId',
  userId: 'userId',
  type: 'type',
  charId: 'charId',
  displayName: 'displayName',
  saved: 'saved',
  note: 'note',
  class: 'class',
  status: 'status',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.SignupType = exports.$Enums.SignupType = {
  TANK: 'TANK',
  HEAL: 'HEAL',
  DPS: 'DPS',
  LOOTBUDDY: 'LOOTBUDDY'
};

exports.SignupStatus = exports.$Enums.SignupStatus = {
  SIGNUPED: 'SIGNUPED',
  PICKED: 'PICKED'
};

exports.Prisma.ModelName = {
  User: 'User',
  Raid: 'Raid',
  Preset: 'Preset',
  BoosterChar: 'BoosterChar',
  Signup: 'Signup'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\Xerik\\Projects\\Boosting Bot react\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\Xerik\\Projects\\Boosting Bot react\\src\\backend\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../src/backend/prisma",
  "clientVersion": "6.16.3",
  "engineVersion": "bb420e667c1820a8c05a38023385f6cc7ef8e83a",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "sqlite",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"sqlite\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id          Int     @id @default(autoincrement())\n  discordId   String  @unique\n  username    String?\n  displayName String?\n  avatarUrl   String?\n  rolesCsv    String?\n  isRaidlead  Boolean @default(false)\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  chars   BoosterChar[]\n  signups Signup[]\n}\n\nmodel Raid {\n  id         Int      @id @default(autoincrement())\n  title      String\n  difficulty String\n  lootType   String\n  date       DateTime\n  lead       String? // Displayname des Leads\n  bosses     Int\n\n  // Preset-Snapshot\n  tanks       Int @default(0)\n  healers     Int @default(0)\n  dps         Int @default(0)\n  lootbuddies Int @default(0)\n\n  // Discord\n  channelId String?\n  messageId String?\n\n  // Preset-Relation\n  presetId Int?\n  preset   Preset? @relation(fields: [presetId], references: [id])\n\n  signups Signup[]\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nmodel Preset {\n  id          Int    @id @default(autoincrement())\n  name        String\n  tanks       Int    @default(0)\n  healers     Int    @default(0)\n  dps         Int    @default(0)\n  lootbuddies Int    @default(0)\n  raids       Raid[]\n}\n\nmodel BoosterChar {\n  id       Int     @id @default(autoincrement())\n  userId   String // Discord User ID (FK -> User.discordId)\n  name     String\n  realm    String\n  class    String?\n  spec     String?\n  rioScore Float?\n\n  // Zusatzfelder\n  progress  String?\n  itemLevel Int?\n  wclUrl    String?\n\n  updatedAt DateTime @updatedAt\n\n  user User @relation(fields: [userId], references: [discordId], onDelete: Cascade)\n\n  signups Signup[]\n}\n\nmodel Signup {\n  id          Int        @id @default(autoincrement())\n  raidId      Int\n  userId      String?\n  type        SignupType\n  charId      Int?\n  displayName String?\n  saved       Boolean    @default(false)\n  note        String?\n\n  // Snapshot der Klasse zum Signup-Zeitpunkt\n  class String?\n\n  // Status der Anmeldung\n  status SignupStatus @default(SIGNUPED)\n\n  createdAt DateTime @default(now())\n\n  raid Raid         @relation(fields: [raidId], references: [id], onDelete: Cascade)\n  char BoosterChar? @relation(fields: [charId], references: [id], onDelete: SetNull)\n  user User?        @relation(fields: [userId], references: [discordId], onDelete: SetNull)\n\n  @@index([raidId])\n  @@index([userId])\n  @@index([charId])\n}\n\nenum SignupType {\n  TANK\n  HEAL\n  DPS\n  LOOTBUDDY\n}\n\nenum SignupStatus {\n  SIGNUPED // angemeldet\n  PICKED // im Roster\n}\n",
  "inlineSchemaHash": "0bc80a6b1be118db35d31d093f9abe6e7d0b2b3100741293fe89dca3b6656c01",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"discordId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"displayName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"avatarUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rolesCsv\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isRaidlead\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"chars\",\"kind\":\"object\",\"type\":\"BoosterChar\",\"relationName\":\"BoosterCharToUser\"},{\"name\":\"signups\",\"kind\":\"object\",\"type\":\"Signup\",\"relationName\":\"SignupToUser\"}],\"dbName\":null},\"Raid\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"difficulty\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lootType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lead\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bosses\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tanks\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"healers\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"dps\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lootbuddies\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"channelId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"messageId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"presetId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"preset\",\"kind\":\"object\",\"type\":\"Preset\",\"relationName\":\"PresetToRaid\"},{\"name\":\"signups\",\"kind\":\"object\",\"type\":\"Signup\",\"relationName\":\"RaidToSignup\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Preset\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tanks\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"healers\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"dps\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lootbuddies\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"raids\",\"kind\":\"object\",\"type\":\"Raid\",\"relationName\":\"PresetToRaid\"}],\"dbName\":null},\"BoosterChar\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"realm\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"class\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"spec\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rioScore\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"progress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"itemLevel\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"wclUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"BoosterCharToUser\"},{\"name\":\"signups\",\"kind\":\"object\",\"type\":\"Signup\",\"relationName\":\"BoosterCharToSignup\"}],\"dbName\":null},\"Signup\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"raidId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"SignupType\"},{\"name\":\"charId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"displayName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"saved\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"note\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"class\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"SignupStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"raid\",\"kind\":\"object\",\"type\":\"Raid\",\"relationName\":\"RaidToSignup\"},{\"name\":\"char\",\"kind\":\"object\",\"type\":\"BoosterChar\",\"relationName\":\"BoosterCharToSignup\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SignupToUser\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

